{"version":3,"file":"static/js/29.fabf576b.chunk.js","mappings":"uKA+BA,IA5BuB,SAAHA,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC/B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CACNC,SAAU,CAAC,KAAM,KAAM,KAAM,KAAM,OACnCC,SAAS,WACTC,IAAK,MACLC,KAAM,MACNC,UAAU,wBACVC,UAAW,OACXC,cAAe,OACfC,WAAY,OACZC,GAAI,CACFC,OAAQ,oBACRC,aAAc,QAEhBC,gBAAiB,OAAOd,SAAA,EAE1Be,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,GAAI,EAAGC,UAAU,SAAQlB,SAAED,IACnCC,IAGP,C,gPChBe,SAASmB,IAEtB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAyBvBC,EAAY,WAChBV,EAAQ,IACRI,EAAU,GACZ,EAEA,OACCd,EAAAA,EAAAA,KAACqB,EAAAA,EAAc,CAAApC,UACbe,EAAAA,EAAAA,KAAA,QAAMsB,SAvBY,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAU,CAAEhB,KAAAA,EAAMI,OAAAA,GAClBa,EAAST,EAASU,MAAK,SAAAF,GAAO,OAAIA,EAAQhB,OAASA,CAAI,IAE7D,GAAIiB,EAGA,OAFAE,MAAK,GAAAC,OAAKpB,EAAI,iCACdW,IAIJL,GAASe,EAAAA,EAAAA,iBAAgBL,IACzBL,GACF,EASiCW,aAAa,KAAI9C,UAC5CC,EAAAA,EAAAA,MAAC8C,EAAAA,EAAK,CAACC,QAAS,EAAGC,GAAI,EAAEjD,SAAA,EACrBe,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CAACC,YAAU,EAAAnD,UACnBC,EAAAA,EAAAA,MAACmD,EAAAA,EAAU,CAAApD,SAAA,EACXe,EAAAA,EAAAA,KAACsC,EAAAA,EAAgB,CAACC,cAAc,OAAMtD,UAClCe,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,CAACC,GAAIC,EAAAA,IAAQC,GAAI,WAE1B3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,KAAK,OAAOpC,KAAK,WAAWqC,YAAY,kBAC3CC,QAAQ,2HACRC,SAvCO,SAAAzB,GACvBb,EAAQa,EAAM0B,cAAcC,MAC9B,EAsCkBA,MAAOzC,UAKfT,EAAAA,EAAAA,KAACmC,EAAAA,GAAW,CAACC,YAAU,EAAAnD,UACnBC,EAAAA,EAAAA,MAACmD,EAAAA,EAAU,CAAApD,SAAA,EACXe,EAAAA,EAAAA,KAACsC,EAAAA,EAAgB,CAACC,cAAc,OAAMtD,UAClCe,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,CAACC,GAAIU,EAAAA,IAASR,GAAI,WAE3B3C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,KAAK,MAAMpC,KAAK,aAAaqC,YAAY,qBAC5CC,QAAQ,iGACRC,SAjDS,SAAAzB,GACzBT,EAAUS,EAAM0B,cAAcC,MAChC,EAgDkBA,MAAOrC,UAIfb,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACP,KAAK,SAAS9C,gBAAgB,UAAUsD,OAAQ,CAACtD,gBAAiB,WAAWd,SAAC,sBAKlG,C,0CC7EaqE,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DCAhBC,EAAcH,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iQAgBvBE,EAAcJ,EAAAA,EAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uFAOtBI,EAAgBN,EAAAA,EAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4FCWxC,GDJsBF,EAAAA,EAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iLCpBd,SAAH1E,GAA8B,IAAxBiF,EAAEjF,EAAFiF,GAAIvD,EAAI1B,EAAJ0B,KAAMI,EAAM9B,EAAN8B,OAC1BE,GAAWC,EAAAA,EAAAA,MAKjB,OACE9B,EAAAA,EAAAA,MAACwE,EAAW,CAAAzE,SAAA,EACVC,EAAAA,EAAAA,MAACyE,EAAW,CAAA1E,SAAA,CACTwB,EAAK,KAACT,EAAAA,EAAAA,KAAC6D,EAAa,CAAA5E,SAAE4B,QAEzBb,EAAAA,EAAAA,KAACiE,EAAAA,GAAG,CAAAhF,UACFe,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACc,QAAS,kBATDC,EASqBH,OARzCjD,GAASqD,EAAAA,EAAAA,oBAAmBD,IADR,IAAAA,CASwB,EAAExB,GAAI,MAAOT,GAAI,MAAOhC,GAAI,MAAOH,gBAAgB,UAAUsD,OAAQ,CAACtD,gBAAiB,WAAWd,UAACe,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,CAACC,GAAI4B,EAAAA,YALvIL,EAStB,GCCA,EAtBqB,WAEnB,IAAM/C,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7B,OACCnB,EAAAA,EAAAA,KAACiE,EAAAA,GAAG,CAAAhF,UACHC,EAAAA,EAAAA,MAACoE,EAAI,CAAArE,SAAA,CACFgC,GAAYA,EAASqD,KAAI,SAAAvF,GAAA,IAAG0B,EAAI1B,EAAJ0B,KAAMI,EAAM9B,EAAN8B,OAAQmD,EAAEjF,EAAFiF,GAAE,OAC3ChE,EAAAA,EAAAA,KAACuE,EAAY,CAEXP,GAAIA,EACJvD,KAAMA,EACNI,OAAQA,GAHHmD,EAIL,IAEiB,IAApB/C,EAASuD,SAAgBxE,EAAAA,EAAAA,KAACyE,EAAAA,EAAI,CAACC,SAAU,GAAIC,WAAW,OAAOC,MAAM,UAAS3F,SAAC,+BAItF,E,UCOA,EA1BoB,WAClB,IAAM8B,GAAWC,EAAAA,EAAAA,MACX6D,GAAS3D,EAAAA,EAAAA,IAAY4D,EAAAA,IAM3B,OACI9E,EAAAA,EAAAA,KAACiE,EAAAA,GAAG,CAAAhF,UACAC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EACEe,EAAAA,EAAAA,KAACyE,EAAAA,EAAI,CAACvE,GAAI,OAAQwE,SAAU,GAAIC,WAAW,OAAOC,MAAM,UAAS3F,SAAC,2BAClEe,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CACJC,KAAK,OACLpC,KAAK,SACLsC,QAAQ,2HACRD,YAAY,qBACZI,MAAO2B,EACP7B,SAdW,SAAAzB,GACrBR,GAASgE,EAAAA,EAAAA,GAAUxD,EAAM0B,cAAcC,OACzC,QAiBF,E,4DCKA,EAzBoB,SAAHnE,GAA8C,IAAxCiG,EAAMjG,EAANiG,OAAQC,EAAOlG,EAAPkG,QAASjG,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC7C,OACEC,EAAAA,EAAAA,MAACgG,EAAAA,GAAK,CAACF,OAAQA,EAAQC,QAASA,EAASE,QAAQ,SAAQlG,SAAA,EACvDe,EAAAA,EAAAA,KAACoF,EAAAA,EAAY,CACXC,eAAe,OACfC,aAAa,SAEfpG,EAAAA,EAAAA,MAACqG,EAAAA,EAAY,CAAAtG,SAAA,EACXe,EAAAA,EAAAA,KAACwF,EAAAA,EAAW,CAAAvG,SAAED,KACdgB,EAAAA,EAAAA,KAACyF,EAAAA,EAAgB,KACjBzF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAS,CAAAzG,SACPA,SAKX,ECQA,EAvBqB,WACnB,IAAM0G,GAAmBzE,EAAAA,EAAAA,IAAY0E,EAAAA,IAC/B7E,GAAWC,EAAAA,EAAAA,MACjB6E,GAAoCC,EAAAA,EAAAA,KAA5Bd,EAAMa,EAANb,OAAQe,EAAMF,EAANE,OAAQd,EAAOY,EAAPZ,QAQxB,OALAe,EAAAA,EAAAA,YAAU,WACHL,GACL5E,GAASkF,EAAAA,EAAAA,qBACX,GAAG,CAACN,EAAkB5E,KAGpB7B,EAAAA,EAAAA,MAACmC,EAAAA,EAAc,CAACrC,MAAM,YAAWC,SAAA,EAC/Be,EAAAA,EAAAA,KAACkG,EAAW,KACZlG,EAAAA,EAAAA,KAACiE,EAAAA,GAAG,CAACxE,UAAW,EAAER,UAACe,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACc,QAAS6B,EAAQI,aAAc,GAAIpG,gBAAgB,UAAUsD,OAAQ,CAACtD,gBAAiB,WAAY2E,SAAU,GAAGzF,SAAC,uBAC5Ie,EAAAA,EAAAA,KAACoG,EAAY,KACbpG,EAAAA,EAAAA,KAACqG,EAAW,CAACrB,OAAQA,EAAQC,QAASA,EAAQhG,UAC1Ce,EAAAA,EAAAA,KAACI,EAAW,CAAC6E,QAASA,QAIhC,C","sources":["components/ChiefContainer/ChiefContainer.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsItem/ContactsItem.styled.js","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/FilterInput/FilterInput.jsx","components/ModalWindow/Modal.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Container, Heading } from \"@chakra-ui/react\";\n\nconst ChiefContainer = ({ title, children }) => {\n  return (\n    <Container \n        maxWidth={['sm', 'md', 'lg', 'xl', '2xl']}\n        position='absolute'\n        top={'50%'}\n        left={'50%'}\n        transform='translate(-50%, -50%)'\n        marginTop={'35px'}\n        paddingBottom={'20px'}\n        paddingTop={'20px'}\n        sx={{\n          border: '2px solid #086a68',\n          borderRadius: '1rem',\n        }}\n        backgroundColor={'#fff'}\n        >\n      <Heading mb={4} textAlign='center'>{title}</Heading>\n      {children}\n    </Container>\n  );\n};\n\nChiefContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default ChiefContainer;\n\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/thunk';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Button, FormControl, Icon, Input, InputGroup, InputLeftElement, Stack } from '@chakra-ui/react';\nimport { FiPhone, FiUser } from 'react-icons/fi';\nimport ChiefContainer from 'components/ChiefContainer/ChiefContainer';\n\nexport default function ContactForm() {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectVisibleContacts);\n  \n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    const contact = { name, number };\n    const isFind = contacts.find(contact => contact.name === name);\n\n    if (isFind) {\n        alert (`${name} is already in contacts`);\n        formReset();\n        return;\n    }\n\n    dispatch(addContactThunk(contact));\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n   <ChiefContainer>\n     <form onSubmit={handleSubmit} autoComplete=\"on\">\n        <Stack spacing={4} mt={8}>\n            <FormControl isRequired >\n                <InputGroup>\n                <InputLeftElement pointerEvents='none'>\n                    <Icon as={FiUser} mr={'8px'} />\n                </InputLeftElement>\n                <Input type=\"text\" name=\"userName\" placeholder='Enter full name'\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    onChange={handleChangeName}\n                    value={name}\n                />\n                </InputGroup>\n            </FormControl>\n\n            <FormControl isRequired >\n                <InputGroup>\n                <InputLeftElement pointerEvents='none'>\n                    <Icon as={FiPhone} mr={'8px'} />\n                </InputLeftElement>\n                <Input type=\"tel\" name=\"userNumber\" placeholder='Enter phone number'\n                    pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n                    onChange={handleChangeNumber}\n                    value={number}\n                />\n                </InputGroup>\n            </FormControl>\n            <Button type=\"submit\" backgroundColor='#BEE3F8' _hover={{backgroundColor: '#4299E1'}}>Add contact</Button>\n        </Stack>\n    </form>\n   </ChiefContainer>\n  );\n}\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  margin-top: 12px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  border: 2px solid #000;\n  background-color: #EDF2F7;\n  padding-left: 10px;\n  padding-right: 5px;\n\n  & + li {\n    margin-top: 12px;\n  }\n\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  font-weight: 700;\n  padding-left: 5px;\n  font-size: 20px;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-left: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: #086a68;\n`;\n\nexport const Button = styled.button`\n  background-color: white;\n  border-radius: 8px;\n  border: 3px solid lightgray;\n  padding: 10px;\n  cursor: pointer;\n  transition: background-color 250ms linear;\n`;","import PropTypes from 'prop-types';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n} from './ContactsItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/thunk';\nimport { Box, Button, Icon } from '@chakra-ui/react';\nimport { FiTrash2 } from 'react-icons/fi';\n\nconst ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  \n  const deleteContact = userId => {\n    dispatch(deleteContactThunk(userId))\n  }\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        {name}:<ContactNumber>{number}</ContactNumber>\n      </ContactName>\n      <Box>\n        <Button onClick={() => deleteContact(id)} mr={'2px'} mt={'2px'} mb={'2px'} backgroundColor='#BEE3F8' _hover={{backgroundColor: '#4299E1'}}><Icon as={FiTrash2} /></Button>\n      </Box>\n    </ContactItem>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;","import { Box, Text } from '@chakra-ui/react';\nimport { List } from './ContactsList.styled';\nimport ContactsItem from 'components/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\n\nconst ContactsList = () => {\n\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n   <Box>\n    <List>\n      {contacts && contacts.map(({ name, number, id }) => (\n        <ContactsItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n        />\n      ))}\n      {contacts.length === 0 && <Text fontSize={16} fontWeight='bold' color='#086a68'>There aren't contacts!</Text>}\n    </List>\n   </Box>\n  );\n};\n\n\nexport default ContactsList;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { addFilter } from 'redux/filterSlice';\nimport { Box, Input, Text } from '@chakra-ui/react';\n\n\n\nconst FilterInput = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  \n  const onChangeFilter = event => {\n    dispatch(addFilter(event.currentTarget.value))\n  };\n  \n  return (\n      <Box>\n          <form>\n            <Text mb={'10px'} fontSize={16} fontWeight='bold' color='#086a68'>Find contacts by name</Text>\n            <Input\n              type=\"text\"\n              name=\"filter\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              placeholder=\"Enter contact name\"\n              value={filter}\n              onChange={onChangeFilter}\n            />\n          </form>     \n      </Box>\n  );\n};\n\n\nexport default FilterInput;","import PropTypes from 'prop-types';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n\nconst ModalWindow = ({ isOpen, onClose, title, children }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} variant='sunset'>\n      <ModalOverlay\n        backdropFilter='auto'\n        backdropBlur='4px'\n      />\n      <ModalContent>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {children}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n};\n\nModalWindow.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  children: PropTypes.any,\n}\n\nexport default ModalWindow;","import { Box, Button, useDisclosure } from '@chakra-ui/react';\nimport ChiefContainer from 'components/ChiefContainer/ChiefContainer';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport FilterInput from 'components/FilterInput/FilterInput';\nimport ModalWindow from 'components/ModalWindow/Modal';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { fetchContactThunk } from 'redux/thunk';\n\nconst ContactsPage = () => {\n  const authentification = useSelector(selectAuthentificated);\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n\n  useEffect(() => {\n    if (!authentification) return;\n    dispatch(fetchContactThunk());\n  }, [authentification, dispatch]);\n\n  return (\n    <ChiefContainer title=\"PhoneBook\">\n      <FilterInput />\n      <Box marginTop={4}><Button onClick={onOpen} marginBottom={18} backgroundColor='#BEE3F8' _hover={{backgroundColor: '#4299E1'}} fontSize={16}>Add new contact</Button></Box>\n      <ContactsList />\n      <ModalWindow isOpen={isOpen} onClose={onClose}>\n          <ContactForm onClose={onClose} />\n      </ModalWindow>\n    </ChiefContainer>\n  )\n}\n\nexport default ContactsPage;\n\n"],"names":["_ref","title","children","_jsxs","Container","maxWidth","position","top","left","transform","marginTop","paddingBottom","paddingTop","sx","border","borderRadius","backgroundColor","_jsx","Heading","mb","textAlign","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectVisibleContacts","formReset","ChiefContainer","onSubmit","event","preventDefault","contact","isFind","find","alert","concat","addContactThunk","autoComplete","Stack","spacing","mt","FormControl","isRequired","InputGroup","InputLeftElement","pointerEvents","Icon","as","FiUser","mr","Input","type","placeholder","pattern","onChange","currentTarget","value","FiPhone","Button","_hover","List","styled","_templateObject","_taggedTemplateLiteral","ContactItem","ContactName","_templateObject2","ContactNumber","_templateObject3","_templateObject4","id","Box","onClick","userId","deleteContactThunk","FiTrash2","map","ContactsItem","length","Text","fontSize","fontWeight","color","filter","selectFilter","addFilter","isOpen","onClose","Modal","variant","ModalOverlay","backdropFilter","backdropBlur","ModalContent","ModalHeader","ModalCloseButton","ModalBody","authentification","selectAuthentificated","_useDisclosure","useDisclosure","onOpen","useEffect","fetchContactThunk","FilterInput","marginBottom","ContactsList","ModalWindow"],"sourceRoot":""}